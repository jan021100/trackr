"use strict";
"import * as functions from 'firebase-functions';\nimport * as admin from 'firebase-admin';\nimport { OpenAI } from 'openai';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\nadmin.initializeApp();\n\nconst openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\n\nexport const chatWithGPT = functions.https.onCall(async (data, context) => {\n  const prompt = data.prompt;\n  const items = data.items; // your clothing DB snapshot\n  const weather = data.weather; // optional weather input\n\n  if (!prompt || typeof prompt !== 'string') {\n    throw new functions.https.HttpsError('invalid-argument', 'Prompt must be a string');\n  }\n\n  const user = context.auth?.uid;\n  if (!user) {\n    throw new functions.https.HttpsError('unauthenticated', 'User must be logged in');\n  }\n\n  try {\n    const messages = [\n      { role: 'system', content: 'You are a smart wardrobe assistant who helps the user decide what to wear and maintain their clothing. You have access to their wardrobe items and local weather.' },\n      { role: 'user', content: `Here is my prompt: ${prompt}` },\n      { role: 'user', content: `Here are my clothing items: ${JSON.stringify(items)}` },\n      { role: 'user', content: `Today\'s weather: ${weather || 'not specified'}` }\n    ];\n\n    const completion = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages,\n      temperature: 0.8\n    });\n\n    return { response: completion.choices[0].message.content };\n  } catch (err) {\n    console.error(err);\n    throw new functions.https.HttpsError('internal', 'GPT request failed');\n  }\n});";
